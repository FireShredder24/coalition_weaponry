Part : /BASE_PART
{
	NameKey = "Parts/SniperLaser"
	IconNameKey = "Parts/SniperLaserIcon"
	IDString = FireShredder24.sniper_laser
	OtherIDs = ["sniper_laser"]
	EditorGroup = "Weapons"
	DescriptionKey = "Parts/SniperLaserDesc"
	Cost = 3500
	AIValue = 5
	TypeCategories = [weapon, weapon_using_power]
	Size = [1, 3]
	PhysicalRect = [0, 1, 1, 2]
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 4000
	InitialPenetrationResistance = 3
	ProhibitAbove = 1
	AllowedDoorLocations
	[
		[-1, 2]
		[1, 2]
		[0, 3]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [16, 64]
	}
	Components
	{
		
		
		BlueprintSprite0
		{
			File = "blueprints.png"
			Size = [1, 4]
			Offset = [0, -0.5]
		Type=BlueprintSprite;}
		PowerUIStats
		{
			Min = 1
			Ideal = 2
			Type = UIStats
			Stat = Power
		}
		CrewUIStats
		{
			Min = 1
			Ideal = 2
			Type = UIStats
			Stat = Crew
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles
			[
				PowerToggle
				BatteryStorage
				PartCrew
			]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			ToggledOnChoices = [1]
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [1]
		}

		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = battery
			MaxAmmo = 3000
			Priorities = { Low=&../LowConsumeJobPriority; High=&../HighConsumeJobPriority; Empty=&../EmptyConsumeJobPriority }
			LowConsumeJobPriority = &/PRIORITIES/Weapon_Supply/Low
			HighConsumeJobPriority = &/PRIORITIES/Weapon_Supply/High
			EmptyConsumeJobPriority = &/PRIORITIES/Weapon_Supply/Empty
			JobUnassignThreshold = 1000000// Effectively unassignable.
			ResupplyThreshold = 500
			AmmoDesireToggle = PowerToggle

			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [.5, 2]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 2]
					}
					{
						File = "floor_33.png"
						Size = [1, 2]
					}
					{
						File = "floor_66.png"
						Size = [1, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads on1.png"
							"doodads on2.png"
							"doodads on3.png"
							"doodads on4.png"
							"doodads on3.png"
							"doodads on2.png"
							"doodads on3.png"
							"doodads on4.png"
						]
						Size = [1, 3]
						Offset = [0, -0.5]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads off.png"
						Size = [1, 3]
						Offset = [0, -0.5]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 2]
					}
					{
						File = "walls_33.png"
						Size = [1, 2]
					}
					{
						File = "walls_66.png"
						Size = [1, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 2]
					}
					{
						File = "roof_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_66.png"
						Size = [1, 2]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, -1]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads_on1.png"
							"roof_doodads_on2.png"
							"roof_doodads_on3.png"
							"roof_doodads_on4.png"
							"roof_doodads_on5.png"
							"roof_doodads_on6.png"
							"roof_doodads_on7.png"
							"roof_doodads_on8.png"
						]
						Size = [1, 2]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, -1]
				DamageLevels
				[
					{
						File = "roof_doodads_off.png"
						Size = [1, 2]
						AnimationInterval = 0.1
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_on.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_on_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_on_66.png"
						Size = [1, 2]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_off.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_off_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_windows_off_66.png"
						Size = [1, 2]
					}
				]
			}
		}

		Turret
		{
			Type = TurretWeapon
			OperationalToggle = IsOperational,
			Location = [.5, 0.46]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			FireInterval = 1
			FiringArc = 120d
			RotateSpeed = 50d
			FireThresholdAngle = 1d
			TargetSearchTriesPerFrame = 1
			AIFirepowerRating = 500
			FireModeToggle = FireModeToggle

			OldEmitter
			{
				Type = Bullet
				Bullet = &<sniper_laser_shot.txt>
			}

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		Emitter = TurretEmitter
		}

		TurretEmitter: Turret/OldEmitter
		{
			Type = BulletEmitter
			Location
			[
				1.0
				0
			]
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			OperationalToggle = IsOperational
			FireDelay = 0
			AmmoStorage = BatteryStorage
			AmmoUsed = 600
		}

		FireEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = TurretEmitter
			Location = [1.1, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "small_laser_charge.wav"
					Volume = .6
				}

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "small_laser_fire.wav"
					Volume = .6
					SpeedVariation = .25
				}
			]
		}

		CrewLocation
		{
			Type = CrewLocation
			Location = [.5, 2.35]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			Priorities = { First=&../FirstCrewJobPriority; Additional=&../AdditionalCrewJobPriority; Full=&../FullCrewJobPriority }
			FirstCrewJobPriority = 100
			AdditionalCrewJobPriority = 101
			FullCrewJobPriority = 102
			PrerequisitesBeforeCrewing = [BatteryStorage, PowerToggle]
			CrewDestinations
			[
				&../../CrewLocation/Location
			]
			CrewLocations
			[
				CrewLocation
			]
		}

		TurretCollider
		{
			Type = CircleCollider
			ChainedTo = Turret
			Radius = .45
			Density = .75
		}

		TurretGraphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			ChainedTo = Turret
			Location = [.5, 0]
			Rotation = 90d
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"turret doodads on1.png"
							"turret doodads on2.png"
							"turret doodads on3.png"
							"turret doodads on4.png"
							"turret doodads on3.png"
							"turret doodads on2.png"
							"turret doodads on1.png"
						]
						Size = [1, 2]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "turret doodads off.png"
						Size = [1, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						// None.
					}
					{
						File = "turret damage_33.png"
						Size = [1, 2]
					}
					{
						File = "turret damage_66.png"
						Size = [1, 2]
					}
				]
			}
		}

		WeaponSprite
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [.5, 0]
			Rotation = 90d
			Layer = "weapons"
			ResetAnimationTrigger = TurretEmitter
			AtlasSprite
			{
				AnimationFiles
				[
					"weapon2.png"
					"weapon3.png"
					"weapon4.png"
					"weapon5.png"
					"weapon6.png"
					"weapon7.png"
					"weapon8.png"
					"weapon1.png"// Loop back to beginning and clamp there.
				]
				Size = [1, 2]
				AnimationInterval = 0.08
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		BatterySprites
		{
			Type = AmmoSprites
			Location = [.5, 2]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			AmmoLevels
			[
				{
					File = "batteries1.png"
					Size = [1, 2]
				}
				{
					File = "batteries2.png"
					Size = [1, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [.5, 1.5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [.5, 1.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, 1.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}
	}
}
