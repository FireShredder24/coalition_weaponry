Part : /BASE_PART
{
	NameKey = "Parts/Blink"
	IconNameKey = "Parts/BlinkIcon"
	IDString = FireShredder24.blink_drive
	OtherIDs = ["blink_drive"]
	EditorGroup = "CWP"
	DescriptionKey = "Parts/BlinkDesc"
	Cost = 10000
	Size = [2, 2]
	SelectionPriority = 0
	MaxHealth = 4000
	InitialPenetrationResistance = 1
	AutoDoorMaxPathLength = 5
	IgnoreRotationForMirroredSelection = true
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components
	{
		
		
		BlueprintSprite0
		{
			File = "blueprints.png"
			Size = [2, 2]
		Type=BlueprintSprite;}
		PowerUIStats
		{
			Min = 1
			Ideal = 1
			Type = UIStats
			Stat = Power
		}
		CrewUIStats
		{
			Min = 0
			Ideal = 2
			Type = UIStats
			Stat = Crew
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles
			[
				PowerToggle
			]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			ToggledOnChoices = [1]
		}
		DetonateTrigger
		{
			Type = UITrigger
			TriggerID = "detonate"
		}
		DetonateEffects
		{
			// This just destroys the part, which in turn will trigger the DeathEffects, causing the actual collateral damage.

			Type = TriggeredEffects
			Trigger = DetonateTrigger
			HitEffects
			[
				{
					Type = AreaImpulse
					ImpulsePerTile = 1500
					ImpulseRadius = 10
				}
				{
					Type = PartAmmoDrain
					AmmoType = battery
					Amount = 16000
				}
			]
		}
		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = battery
			MaxAmmo = 16000
			InitToMaxAmmo = 0
			Priorities = { Low=&../LowConsumeJobPriority; High=&../HighConsumeJobPriority; Empty=&../EmptyConsumeJobPriority }
			LowConsumeJobPriority = &/PRIORITIES/Ftl_Supply/Empty
			HighConsumeJobPriority = &/PRIORITIES/Ftl_Supply/Empty
			EmptyConsumeJobPriority = &/PRIORITIES/Ftl_Supply/Empty
			JobUnassignThreshold = 1000000// Effectively unassignable.
			ResupplyThreshold = 0
			AmmoDesireToggle = PowerToggle
			AllowMinPriorityUndesiredAmmo = false

			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [1, 1]
			AnimationSpeedFactor = BatteryStorage
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.015
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"lights1.png"
							"lights2.png"
							"lights3.png"
							"lights4.png"
							"lights5.png"
							"lights6.png"
							"lights7.png"
							"lights8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.015
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 2]
					}
					{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [2, 2]
					}
					{
						File = "roof_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads_on1.png"
							"roof_doodads_on2.png"
							"roof_doodads_on3.png"
							"roof_doodads_on4.png"
							"roof_doodads_on5.png"
							"roof_doodads_on6.png"
							"roof_doodads_on7.png"
							"roof_doodads_on8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.015
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_doodads_off.png"
						Size = [2, 2]
						AnimationInterval = 0.015
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_on.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_on_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_on_66.png"
						Size = [2, 2]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_off.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_off_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_off_66.png"
						Size = [2, 2]
					}
				]
			}
		}

		BatterySprites
		{
			Type = AmmoSprites
			Location = [1, 1]
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "power1.png"
					Size = [2, 2]
				}
				{
					File = "power2.png"
					Size = [2, 2]
				}
				{
					File = "power3.png"
					Size = [2, 2]
				}
				{
					File = "power4.png"
					Size = [2, 2]
				}
				{
					File = "power5.png"
					Size = [2, 2]
				}
				{
					File = "power6.png"
					Size = [2, 2]
				}
				{
					File = "power7.png"
					Size = [2, 2]
				}
				{
					File = "power8.png"
					Size = [2, 2]
				}
				{
					File = "power9.png"
					Size = [2, 2]
				}
				{
					File = "power10.png"
					Size = [2, 2]
				}
				{
					File = "power11.png"
					Size = [2, 2]
				}
				{
					File = "power12.png"
					Size = [2, 2]
				}
				{
					File = "power13.png"
					Size = [2, 2]
				}
				{
					File = "power14.png"
					Size = [2, 2]
				}
				{
					File = "power15.png"
					Size = [2, 2]
				}
				{
					File = "power16.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [1, 1]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}
			]
		}
	}
}
